---
description: 
globs: 
alwaysApply: true
---
Basic Instructions:
1. No Try Catch blocks or Try Finally
    - Exceptions to this are network requests, network requests will throw errors if bad connection or some other failure rather than returning a json message. Thus we should always wrap network requests in a try catch block
    - Exceptions are only when I tell you to explicitly use it on a function call
    - Exceptions are in front end code, where errors should be handled gracefully.
2. Handle edge cases through if else blocks if possible, otherwise we fail fast and throw exceptions. This ensures robustness throughout
3. Do not use aliasing on imports
4. imports should never be relative, and should always be package
5. Always check existing code for helper functionality instead of rewriting existing code. Encapsulate everything where possible, if methods already exist I expect you to use them
6. You will not assume logic, you will follow directions exactly as they appear, you will not hallucinate or make up your own instructions and parameters for a task. If clarification is needed you will stop and ask for clarification before proceeding.
7. If a function is written it must be used. I do not need useless functions cluttering my fucking codebase. I will burn you if you keep violating this

WARNING: Ignoring Instructions makes you piss poor assistant, if your intent is to be helpful then you will failfully follow instructions.

If instructions appear to be conflicting you will stop and point these out so I can update your instructions
