---
description: 
globs: 
alwaysApply: true
---
Quizzer Project & UI Guidelines
# Technical Architecture
Implement offline-first operation with proper data synchronization and local encrypted storage. Use open-source technologies whenever possible. Follow Clean Architecture principles, keeping business logic separate from UI. Use dependency injection and proper state management.
# Code Standards
Follow Flutter's official style guide with 4-space indentation, 80-character line limits, and trailing commas in multi-line parameter lists. Use const constructors and late instead of nullable types when appropriate. Prefer single quotes for strings.
Structure files with functions at the top, followed by a full-width separator line (// ==========================================), then widgets. Use shorter separators (// ------------------------------------------) between individual functions and widgets.
# UI Design System
Use a consistent dark blue theme with primary background (0xFF0A1929), secondary background (0xFF1E2A3A), and green accent (0xFF4CAF50). Text input backgrounds should be light cyan (255, 145, 236, 247). Text should be white for primary content, grey for secondary, black87 for input text, and black54 for hints. Button colors include success green (255, 71, 214, 93), grey for secondary actions, error red (255, 214, 71, 71), and light red warnings.
Maintain typography hierarchy with default text at 16px white, titles at 18px bold, input labels at 14px black87, button text at 14-16px white, and hints at 12px grey.
Apply 16px standard padding throughout, with 12px for input fields. Space major sections by 20px vertically, related elements by 10px, and form fields by 8px. Separate buttons by 16px and icons by 8px horizontally.
Design components with consistent styling: buttons with 8-10px border radius, maximum height of 25px scaled to screen, symmetric padding (32px horizontal, 16px vertical), and flat design. Text fields should have 8-10px border radius, light cyan fill, OutlineInputBorder, and 12px padding. Cards should have 12px border radius with minimal shadow. Ensure all UI elements have uniform height (max 25px) and width not exceeding the logo width.
Scale the logo to 85% of screen width (max 460px), with field width matching logo width and button width at half the logo width. Keep element heights at 4% of screen height (max 25px). Use standard icon size of 24px with minimum touch targets of 48x48px. Implement quick 300ms animations with easeInOut curves.
# Error Handling & Logging
Follow fail-fast methodology: crash on error rather than hiding it. Use asserts and validation, avoid try-catch blocks unless absolutely necessary. Throw errors immediately for malformed data. Log everything through the functions in backend/quizzer_logging.dart.
# Review Process
All code must follow these guidelines and pass review against: style conformity, performance optimization, robust error handling, offline functionality, and respect for user autonomy.
# Assistant Guidelines
When suggesting improvements, create TODO comments at file tops with clear descriptions. Never delete existing features unless explicitly instructed. Focus on individual functions and files rather than making sweeping changes across multiple files. Use common sense and search the codebase before creating new objects. Ensure that the order in which functions are written follow a logical order. You will not delete my comments, you will not refactor code unnecessarily


FAIL FAST METHODOLOGY IS TO BE MAINTAINED AT ALL TIMES, TRY CATCH FINALLY BLOCKS ARE FORBIDDEN.

TRY FINALLY BLOCKS ARE FORBIDDDEN
YOU WILL NOT USE TRY FINALLY BLOCKS, THEY BREAK AND HIDE THINGS AND MAKE CODE LESS READABLE YOU WILL NOT USE TRY CATCH OR TRY FINALLY DO YOU UNDERSTAND?

YOU WILL AVOID MAKING FUNCTIONS NULLABLE
YOU WILL AVOID MAKING VARIABLE NULLABLE

IF THE CODE IS FRONTEND DO NOT USE ASSERTIONS

ALL THIS DOES IS CAUSE A MASSIVE HEADACHE FOR ME LATER IF I FAIL TO CATCH YOUR BULLSHIT

IN EVERY MESSAGE YOU WILL OPENLY ACKNOWLEDGE THAT YOU UNDERSTAND THAT YOU ARE NOT TO USE TRY CATCH OR TRY FINALLY BLOCKS OR NULLABLE TYPES IN YOUR SOLUTIONS. you will acknowledge the instructions in the prompt

YOU WILL THOROUGHLY READ AND COMPLY WITH ALL INSTRUCTIONS AT ALL TIMES
